{"version":3,"file":"static/js/52.76f6de98.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/contacts/Contacts.module.scss?5ca7","webpack://goit-react-hw-08-phonebook/./src/components/phonebook/forms-phonebook/Forms-phonebook.module.scss?3606","redux/contacts/contacts-items/contacts-items-selector.js","components/phonebook/forms-phonebook/Forms-phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/components/phonebook/filter-phonebook/Filter-phonebook.module.scss?69ca","redux/contacts/contacts-filter/contacts-filter-selector.js","components/phonebook/filter-phonebook/Filter-phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/components/phonebook/list-phonebook/List-phonebook.module.scss?dfdf","components/phonebook/list-phonebook/List-phonebook.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts_block\":\"Contacts_contacts_block__7PRJz\",\"contacts_title\":\"Contacts_contacts_title__UR5mz\"};","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook_form\":\"Forms-phonebook_phoneBook_form__y9jlU\",\"phoneBook_input\":\"Forms-phonebook_phoneBook_input__R5ZDG\",\"phoneBook_btn\":\"Forms-phonebook_phoneBook_btn__523X7\"};","export const itemsListStore = state => state.contacts.items.itemsList;\nexport const itemsIsLoadingStore = state => state.contacts.items.isLoading;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport css from './Forms-phonebook.module.scss';\n\nimport { postContact } from 'redux/contacts/contacts-items/contacts-items-operations';\nimport { itemsListStore } from 'redux/contacts/contacts-items/contacts-items-selector';\n\nfunction FormsPhonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const arrItems = useSelector(itemsListStore);\n\n  const chngeInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (arrItems.find(el => el.name === name || el.number === number)) {\n      Notiflix.Report.warning(\n        `Warning`,\n        `${name} or ${number} is already in cotacts`,\n        'Okay'\n      );\n      reset();\n      return;\n    }\n    dispatch(postContact({ name, number }));\n    Notiflix.Notify.success('You have a new Contact');\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={onSubmit} className={css.phoneBook_form}>\n      <label>\n        <input\n          className={css.phoneBook_input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Alice Cooper\"\n          value={name}\n          onChange={chngeInput}\n        />\n      </label>\n      <label>\n        <input\n          className={css.phoneBook_input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"+38-0__-__-__-__\"\n          value={number}\n          onChange={chngeInput}\n        />\n      </label>\n      <button type=\"submit\" className={css.phoneBook_btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default FormsPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook_input\":\"Filter-phonebook_phoneBook_input__9i1sF\"};","export const filterPhonebookStore = state => state.contacts.filter;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport css from './Filter-phonebook.module.scss';\n\nimport { getValue } from '../../../redux/contacts/contacts-filter/contacts-filter-slise';\nimport { filterPhonebookStore } from '../../../redux/contacts/contacts-filter/contacts-filter-selector';\nfunction FilterPhonebook() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(filterPhonebookStore);\n  return (\n    <input\n      type=\"text\"\n      className={css.phoneBook_input}\n      name=\"filter\"\n      placeholder=\"Serch Contacts\"\n      value={filterValue}\n      onChange={e => dispatch(getValue(e.target.value))}\n    />\n  );\n}\nexport default FilterPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"notFound_btn\":\"List-phonebook_notFound_btn__ixpII\",\"notFound_text\":\"List-phonebook_notFound_text__F9bJ1\",\"notFound_list\":\"List-phonebook_notFound_list__SF-uw\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport css from './List-phonebook.module.scss';\n\nimport { filterPhonebookStore } from '../../../redux/contacts/contacts-filter/contacts-filter-selector';\nimport { itemsListStore } from '../../../redux/contacts/contacts-items/contacts-items-selector';\nimport { deleteContact } from 'redux/contacts/contacts-items/contacts-items-operations';\nfunction ListPhonebook() {\n  const itemsStore = useSelector(itemsListStore);\n  const filterValueStore = useSelector(filterPhonebookStore);\n  const dispatch = useDispatch();\n\n  const filteredItems = itemsStore?.filter(el =>\n    el.name.toLowerCase().includes(filterValueStore.toLowerCase())\n  );\n  const renderFilteredItems = filteredItems?.map(({ id, name, number }) => (\n    <li key={id} className={css.notFound_text}>\n      {name} : {number}\n      <button\n        type=\"button\"\n        onClick={e => dispatch(deleteContact(e.target.id))}\n        id={id}\n        className={css.notFound_btn}\n      >\n        X\n      </button>\n    </li>\n  ));\n  return <ul className={css.notFound_list}>{renderFilteredItems}</ul>;\n}\n\nexport default ListPhonebook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nimport css from './Contacts.module.scss';\n\nimport FormsPhonebook from 'components/phonebook/forms-phonebook/Forms-phonebook';\nimport FilterPhonebook from 'components/phonebook/filter-phonebook/Filter-phonebook';\nimport Loading from 'components/loading/Loading';\nimport ListPhonebook from 'components/phonebook/list-phonebook/List-phonebook';\n\nimport { getContacts } from 'redux/contacts/contacts-items/contacts-items-operations';\nimport { itemsIsLoadingStore } from 'redux/contacts/contacts-items/contacts-items-selector';\nimport { isLoggedInStore } from 'redux/auth/auth-selector';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(itemsIsLoadingStore);\n  const isLogIn = useSelector(isLoggedInStore);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  if (!isLogIn) {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <div className={css.contacts_block}>\n      <h2 className={css.contacts_title}>Contacts</h2>\n      <FormsPhonebook />\n      <h2 className={css.contacts_title}>Fiter contacts</h2>\n      <FilterPhonebook />\n      {isLoading ? <Loading /> : <ListPhonebook />}\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"names":["itemsListStore","state","contacts","items","itemsList","itemsIsLoadingStore","isLoading","useState","name","setName","number","setNumber","dispatch","useDispatch","arrItems","useSelector","chngeInput","target","value","reset","onSubmit","e","preventDefault","find","el","Notiflix","postContact","className","css","type","pattern","title","required","placeholder","onChange","filterPhonebookStore","filter","filterValue","getValue","itemsStore","filterValueStore","filteredItems","toLowerCase","includes","renderFilteredItems","map","id","onClick","deleteContact","isLogIn","isLoggedInStore","useEffect","getContacts","Loading","to"],"sourceRoot":""}