{"version":3,"file":"static/js/673.9a6c5da9.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/contacts/Contacts.module.scss?5ca7","webpack://goit-react-hw-08-phonebook/./src/components/phonebook/forms-phonebook/Forms-phonebook.module.scss?3606","redux/contacts/contacts-items/contacts-items-selector.js","components/phonebook/forms-phonebook/Forms-phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/components/phonebook/filter-phonebook/Filter-phonebook.module.scss?69ca","redux/contacts/contacts-filter/contacts-filter-selector.js","components/phonebook/filter-phonebook/Filter-phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/components/phonebook/list-phonebook/List-phonebook.module.scss?dfdf","components/phonebook/list-phonebook/List-phonebook.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/modal/Modal.module.scss?c5f0","shared/modal/Modal.jsx","webpack://goit-react-hw-08-phonebook/./src/components/edit-contact/EditContact.module.scss?7169","components/edit-contact/EditContact.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts_block\":\"Contacts_contacts_block__7PRJz\",\"contacts_title\":\"Contacts_contacts_title__UR5mz\"};","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook_form\":\"Forms-phonebook_phoneBook_form__y9jlU\",\"phoneBook_input\":\"Forms-phonebook_phoneBook_input__R5ZDG\",\"phoneBook_btn\":\"Forms-phonebook_phoneBook_btn__523X7\"};","export const itemsListStore = state => state.contacts.items.itemsList;\nexport const itemsIsLoadingStore = state => state.contacts.items.isLoading;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport css from './Forms-phonebook.module.scss';\n\nimport { postContact } from 'redux/contacts/contacts-items/contacts-items-operations';\nimport { itemsListStore } from 'redux/contacts/contacts-items/contacts-items-selector';\n\nfunction FormsPhonebook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const arrItems = useSelector(itemsListStore);\n\n  const chngeInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (arrItems.find(el => el.name === name || el.number === number)) {\n      Notiflix.Report.warning(\n        `Warning`,\n        `${name} or ${number} is already in cotacts`,\n        'Okay'\n      );\n      reset();\n      return;\n    }\n    Notiflix.Notify.success(`Added contact, ${name}`);\n    dispatch(postContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={onSubmit} className={css.phoneBook_form}>\n      <label>\n        <input\n          className={css.phoneBook_input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Alice Cooper\"\n          value={name}\n          onChange={chngeInput}\n        />\n      </label>\n      <label>\n        <input\n          className={css.phoneBook_input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"+38-0__-__-__-__\"\n          value={number}\n          onChange={chngeInput}\n        />\n      </label>\n      <button type=\"submit\" className={css.phoneBook_btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default FormsPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"phoneBook_input\":\"Filter-phonebook_phoneBook_input__9i1sF\"};","export const filterPhonebookStore = state => state.contacts.filter;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport css from './Filter-phonebook.module.scss';\n\nimport { getValue } from '../../../redux/contacts/contacts-filter/contacts-filter-slise';\nimport { filterPhonebookStore } from '../../../redux/contacts/contacts-filter/contacts-filter-selector';\nfunction FilterPhonebook() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(filterPhonebookStore);\n  return (\n    <input\n      type=\"text\"\n      className={css.phoneBook_input}\n      name=\"filter\"\n      placeholder=\"Serch Contacts\"\n      value={filterValue}\n      onChange={e => dispatch(getValue(e.target.value))}\n    />\n  );\n}\nexport default FilterPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"notFound_btn\":\"List-phonebook_notFound_btn__ixpII\",\"notFound_text\":\"List-phonebook_notFound_text__F9bJ1\",\"notFound_list\":\"List-phonebook_notFound_list__SF-uw\"};","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport css from './List-phonebook.module.scss';\n\nimport { filterPhonebookStore } from '../../../redux/contacts/contacts-filter/contacts-filter-selector';\nimport { itemsListStore } from '../../../redux/contacts/contacts-items/contacts-items-selector';\nimport { deleteContact } from 'redux/contacts/contacts-items/contacts-items-operations';\n\nfunction ListPhonebook({ onClick }) {\n  const itemsStore = useSelector(itemsListStore);\n  const filterValueStore = useSelector(filterPhonebookStore);\n  const dispatch = useDispatch();\n  // console.log(onClick);\n\n  const filteredItems = itemsStore?.filter(el =>\n    el.name.toLowerCase().includes(filterValueStore.toLowerCase())\n  );\n  const renderFilteredItems = filteredItems?.map(({ id, name, number }) => (\n    <li key={id} className={css.notFound_text}>\n      {name} : {number}\n      <button\n        type=\"button\"\n        onClick={e => dispatch(deleteContact(e.target.id))}\n        id={id}\n        className={css.notFound_btn}\n      >\n        X\n      </button>\n      <button\n        type=\"button\"\n        onClick={onClick}\n        id={id}\n        className={css.notFound_btn}\n      >\n        Edit\n      </button>\n    </li>\n  ));\n  return <ul className={css.notFound_list}>{renderFilteredItems}</ul>;\n}\n\nListPhonebook.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ListPhonebook;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__-Y3n+\",\"modal\":\"Modal_modal__LC+TJ\"};","import css from './Modal.module.scss';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nconst modal = document.querySelector('#modal');\n\nfunction Modal({ onClick, children }) {\n  useEffect(() => {\n    document.addEventListener('keydown', onEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', onEscClose);\n    };\n  });\n\n  const onEscClose = e => {\n    if (e.code === 'Escape') {\n      onClick();\n    }\n  };\n\n  const backdropClose = ({ target, currentTarget }) => {\n    if (target === currentTarget) {\n      onClick();\n    }\n  };\n  return createPortal(\n    <div className={css.backdrop} onClick={backdropClose}>\n      <div className={css.modal}>{children}</div>\n    </div>,\n    modal\n  );\n}\n\nModal.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"edit_item\":\"EditContact_edit_item__34Z+d\",\"edit_itemStyle\":\"EditContact_edit_itemStyle__V2FFc\",\"edit_form\":\"EditContact_edit_form__VQspC\",\"edit_input\":\"EditContact_edit_input__a7k9-\",\"edit_btnEdit\":\"EditContact_edit_btnEdit__-iJH8\",\"edit_btnClose\":\"EditContact_edit_btnClose__hPJHk\"};","import PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport css from './EditContact.module.scss';\n\n// import { itemsListStore } from 'redux/contacts/contacts-items/contacts-items-selector';\nimport { renameContact } from 'redux/contacts/contacts-items/contacts-items-operations';\nfunction EditContact({ contact, onClose }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  // const arrItems = useSelector(itemsListStore);\n\n  const changeInput = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    // if (arrItems.find(el => el.name === name || el.number === number)) {\n    //   Notiflix.Report.warning(\n    //     `Warning`,\n    //     `${name} or ${number} is already in cotacts`,\n    //     'Okay'\n    //   );\n\n    //   return;\n    // }\n    if (name !== contact.name) {\n      Notiflix.Notify.success(\n        `Changet contact name ${contact.name} to ${name}`\n      );\n    }\n    if (number !== contact.number) {\n      Notiflix.Notify.success(\n        `Changet contact ${contact.name} number to ${number}`\n      );\n    }\n    const newContactValue = {\n      id: contact.id,\n      user: { name, number },\n    };\n    dispatch(renameContact(newContactValue));\n    onClose();\n  };\n  return (\n    <div>\n      <ul>\n        <li className={css.edit_item}>\n          <span className={css.edit_itemStyle}>name:</span> {contact.name}\n        </li>\n        <li className={css.edit_item}>\n          <span className={css.edit_itemStyle}>number: </span> {contact.number}\n        </li>\n      </ul>\n      <form onSubmit={onSubmit} className={css.edit_form}>\n        <label>\n          <input\n            className={css.edit_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Alice Cooper\"\n            value={name}\n            onChange={changeInput}\n          />\n        </label>\n        <label>\n          <input\n            className={css.edit_input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"+38-0__-__-__-__\"\n            value={number}\n            onChange={changeInput}\n          />\n        </label>\n        <div>\n          <button type=\"submit\" className={css.edit_btnEdit}>\n            Edit\n          </button>\n          <button type=\"button\" className={css.edit_btnClose} onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nEditContact.propTypes = {\n  onClose: PropTypes.func,\n  contact: PropTypes.shape({\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n  }),\n};\n\nexport default EditContact;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport css from './Contacts.module.scss';\n\nimport FormsPhonebook from 'components/phonebook/forms-phonebook/Forms-phonebook';\nimport FilterPhonebook from 'components/phonebook/filter-phonebook/Filter-phonebook';\nimport Loading from 'components/loading/Loading';\nimport ListPhonebook from 'components/phonebook/list-phonebook/List-phonebook';\nimport Modal from 'shared/modal/Modal';\nimport EditContact from 'components/edit-contact/EditContact';\n\nimport { getContacts } from 'redux/contacts/contacts-items/contacts-items-operations';\nimport {\n  itemsIsLoadingStore,\n  itemsListStore,\n} from 'redux/contacts/contacts-items/contacts-items-selector';\n\nfunction Contacts() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [contact, setContact] = useState({});\n  const dispatch = useDispatch();\n  const isLoading = useSelector(itemsIsLoadingStore);\n  const contactsList = useSelector(itemsListStore);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  const contactRenderModal = ({ target }) => {\n    toggleModal();\n    const contact = contactsList.find(el => el.id === target.id);\n    setContact(contact);\n  };\n\n  return (\n    <div className={css.contacts_block}>\n      {modalOpen && (\n        <Modal onClick={toggleModal}>\n          <EditContact contact={contact} onClose={toggleModal} />\n        </Modal>\n      )}\n\n      <h2 className={css.contacts_title}>Phonebook</h2>\n      <FormsPhonebook />\n      <h2 className={css.contacts_title}>Fiter contacts</h2>\n      <FilterPhonebook />\n      {isLoading ? <Loading /> : <ListPhonebook onClick={contactRenderModal} />}\n    </div>\n  );\n}\n\nexport default Contacts;\n"],"names":["itemsListStore","state","contacts","items","itemsList","itemsIsLoadingStore","isLoading","useState","name","setName","number","setNumber","dispatch","useDispatch","arrItems","useSelector","chngeInput","target","value","reset","onSubmit","e","preventDefault","find","el","Notiflix","postContact","className","css","type","pattern","title","required","placeholder","onChange","filterPhonebookStore","filter","filterValue","getValue","onClick","itemsStore","filterValueStore","filteredItems","toLowerCase","includes","renderFilteredItems","map","id","deleteContact","modal","document","querySelector","children","useEffect","addEventListener","onEscClose","removeEventListener","code","createPortal","currentTarget","contact","onClose","changeInput","newContactValue","user","renameContact","modalOpen","setModalOpen","setContact","contactsList","getContacts","toggleModal","Loading"],"sourceRoot":""}